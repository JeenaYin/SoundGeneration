<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
    <title>Drone</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <script src="https://unpkg.com/@webcomponents/webcomponentsjs@^2/webcomponents-bundle.js"></script>
    <script src='/jQuery/tmp/jquery.js'></script>
    <script src='/tone/build/Tone.js'></script>
    <script src='/lamejs/lame.all.js'></script>
    <!-- <script src='/ffmpeg/lib/ffmpeg.js'></script> -->
    <!-- <script src="./js/tonejs-ui.js"></script> -->
    <style type="text/css">
        tone-button {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <script type="text/javascript">
        $(document).on('click', function() {
            // for(var i = 2; i < 5; i++) {
            //     for (var j = 1; j <= 7; j++) {
            //         setTimeout(function(){
                        // var l = 'a';
                        // if(j === 2) {l = 'b';}
                        // else if(j === 3) {l = 'c';}
                        // else if(j === 4) {l = 'd';}
                        // else if(j === 5) {l = 'e';}
                        // else if(j === 6) {l = 'f';}
                        // else if(j === 7) {l = 'g';}

                        // var note = l+i;
                        var player = new Tone.Player().toMaster();
                        var buffer;
                        var array;
                        var wurl = window.location.href
                        var note = wurl.slice(wurl.indexOf("-")+1);
                        console.log("note: " + note);

                        Tone.Offline(function(){
                            //only nodes created in this callback will be recorded
                            var oscillator = new Tone.Oscillator(note).toMaster().start(0)
                            //schedule their events
                        }, 1).then(function(b){
                            player.buffer = b;

                            player.start();

                            //1-dimensional Float32Array

                            mp3encoder = new lamejs.Mp3Encoder(2, 44100, 128);
                            var mp3Data = [];
                            var left = (b.toArray())[0].map(n => n*32768); //one second of silence (get your data from the source you have)

                            var right = (b.toArray())[1].map(n => n*32768); //one second of silence (get your data from the source you have)
                            sampleBlockSize = 1152; //can be anything but make it a multiple of 576 to make encoders life easier

                            for (var i = 0; i < left.length; i += sampleBlockSize) {
                              leftChunk = left.slice(i, i + sampleBlockSize);
                              rightChunk = right.slice(i, i + sampleBlockSize);
                              var mp3buf = mp3encoder.encodeBuffer(leftChunk, rightChunk);
                              if (mp3buf.length > 0) {
                                mp3Data.push(mp3buf);
                              }
                            }
                            var mp3buf = mp3encoder.flush();   //finish writing mp3

                            if (mp3buf.length > 0) {
                                mp3Data.push(mp3buf);
                            }
                            var blob = new Blob(mp3Data, {type: 'audio/mp3'});
                            var url = window.URL.createObjectURL(blob);


                            console.log('MP3 URl: ', url);

                            var saveData = function (filename) {
                                    var a = document.createElement("a");
                                    document.body.appendChild(a);
                                    a.innerHTML = 'audio here: '+filename;
                                    a.href = url;
                                    a.download = filename;
                                    a.click();
                                    window.URL.revokeObjectURL(url);
                                    // a.remove();
                                    console.log(filename);
                                };

                            saveData(note+".mp3");
                        })}
        )
        
    </script>
</body>
</html>