<!DOCTYPE html>
<html>
  <head>
    <title>Alexander Woskob</title>
  </head>
  <header>
    <div class="logo">
      <h1 class="textlogo"> Music Toolbox </h1>
    </div>
  </header>
  <body>
    <script src='/lamejs/lame.all.js'></script>
    <script src='/tone/build/Tone.js'></script>
    <script src='/jQuery/tmp/jquery.js'></script>
    <script>
      //var started = false;
      window.onload = function() {
      var context = new AudioContext();
        // Setup all nodes

            //if (started) return;
      //started = true;
      //const audio = document.querySelector('audio');
      const synth = new Tone.Synth();
      const actx  = Tone.context;
      const dest  = actx.createMediaStreamDestination();
      const recorder = new MediaRecorder(dest.stream);

      synth.connect(dest);
      synth.toMaster();

      const chunks = [];

      const notes = 'CDEFGAB'.split('').map(n => `${n}4`);
      let note = 0;
      Tone.Transport.scheduleRepeat(time => {
        if (note === 0) recorder.start();
        if (note > notes.length) {
          synth.triggerRelease(time)
          recorder.stop();
          Tone.Transport.stop();
        } else synth.triggerAttack(notes[note], time);
        note++;
      }, '4n');

      var url;
      var blob;

      recorder.ondataavailable = evt => chunks.push(evt.data);
      recorder.onstop = evt => {
        blob = new Blob(chunks, { type: 'audio/mp3; codecs=opus' });
        //audio.src = URL.createObjectURL(blob);
        url = window.URL.createObjectURL(blob);
        console.log('MP3 URl: ', url);

        var saveData = (function () {
        var a = document.createElement("a");
        document.body.appendChild(a);
        a.style = "display: none";
        return function (fileName) {
            a.href = url;
            a.download = fileName;
            a.click();
            window.URL.revokeObjectURL(url);
        };
        }());

        saveData("test.mp3");
      };

      

    }
    </script>
    <!--
    <script>
      channels = 1; //1 for mono or 2 for stereo
      sampleRate = 44100; //44.1khz (normal mp3 samplerate)
      kbps = 128; //encode 128kbps mp3
      mp3encoder = new lamejs.Mp3Encoder(channels, sampleRate, kbps);
      var mp3Data = [];

      samples = new Int16Array(44100); //one second of silence (get your data from the source you have)
      sampleBlockSize = 1152; //can be anything but make it a multiple of 576 to make encoders life easier

      var mp3Data = [];
      for (var i = 0; i < samples.length; i += sampleBlockSize) {
        sampleChunk = samples.subarray(i, i + sampleBlockSize);
        var mp3buf = mp3encoder.encodeBuffer(sampleChunk);
        if (mp3buf.length > 0) {
            mp3Data.push(mp3buf);
        }
      }
      var mp3buf = mp3encoder.flush();   //finish writing mp3

      if (mp3buf.length > 0) {
          mp3Data.push(new Int8Array(mp3buf));
      }

      var blob = new Blob(mp3Data, {type: 'audio/mp3'});
      var url = window.URL.createObjectURL(blob);
      console.log('MP3 URl: ', url);
    </script>
  -->
  </body>
